/*
 * Merge Ticketing API
 *
 * The unified API for building rich integrations with multiple Ticketing platforms.
 *
 * API version: 1.0
 * Contact: hello@merge.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merge_ticketing_client

import (
	"encoding/json"
)

// TicketingAttachmentEndpointRequest struct for TicketingAttachmentEndpointRequest
type TicketingAttachmentEndpointRequest struct {
	Model AttachmentRequest `json:"model"`
	// raw json response by property name
	ResponseRaw map[string]json.RawMessage `json:"-"`
}

// NewTicketingAttachmentEndpointRequest instantiates a new TicketingAttachmentEndpointRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTicketingAttachmentEndpointRequest(model AttachmentRequest) *TicketingAttachmentEndpointRequest {
	this := TicketingAttachmentEndpointRequest{}
	this.Model = model
	return &this
}

// NewTicketingAttachmentEndpointRequestWithDefaults instantiates a new TicketingAttachmentEndpointRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTicketingAttachmentEndpointRequestWithDefaults() *TicketingAttachmentEndpointRequest {
	this := TicketingAttachmentEndpointRequest{}
	return &this
}

// GetModel returns the Model field value
func (o *TicketingAttachmentEndpointRequest) GetModel() AttachmentRequest {
	if o == nil {
		var ret AttachmentRequest
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *TicketingAttachmentEndpointRequest) GetModelOk() (*AttachmentRequest, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *TicketingAttachmentEndpointRequest) SetModel(v AttachmentRequest) {
	o.Model = v
}

func (o TicketingAttachmentEndpointRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["model"] = o.Model
	}
	return json.Marshal(toSerialize)
}

func (v *TicketingAttachmentEndpointRequest) UnmarshalJSON(src []byte) error {
    type TicketingAttachmentEndpointRequestUnmarshalTarget TicketingAttachmentEndpointRequest

	var intermediateResult TicketingAttachmentEndpointRequestUnmarshalTarget
	var err1 = json.Unmarshal(src, &intermediateResult)
    if err1 != nil {
        return err1
    }
    var err2 = json.Unmarshal(src, &intermediateResult.ResponseRaw)
	if err2 != nil {
		return err2
	}

	*v = TicketingAttachmentEndpointRequest(intermediateResult)
	return nil
}
type NullableTicketingAttachmentEndpointRequest struct {
	value *TicketingAttachmentEndpointRequest
	isSet bool
}

func (v NullableTicketingAttachmentEndpointRequest) Get() *TicketingAttachmentEndpointRequest {
	return v.value
}

func (v *NullableTicketingAttachmentEndpointRequest) Set(val *TicketingAttachmentEndpointRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTicketingAttachmentEndpointRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTicketingAttachmentEndpointRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTicketingAttachmentEndpointRequest(val *TicketingAttachmentEndpointRequest) *NullableTicketingAttachmentEndpointRequest {
	return &NullableTicketingAttachmentEndpointRequest{value: val, isSet: true}
}

func (v NullableTicketingAttachmentEndpointRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTicketingAttachmentEndpointRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	var err1 = json.Unmarshal(src, &v.value)
    if err1 != nil {
        return err1
    }
    return json.Unmarshal(src, &v.value.ResponseRaw)
}


