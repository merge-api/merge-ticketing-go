/*
 * Merge Ticketing API
 *
 * The unified API for building rich integrations with multiple Ticketing platforms.
 *
 * API version: 1.0
 * Contact: hello@merge.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merge_ticketing_client

import (
	"encoding/json"
)

// CommonModelScopesDisabledModels struct for CommonModelScopesDisabledModels
type CommonModelScopesDisabledModels struct {
	ModelName string `json:"model_name"`
	ModelId string `json:"model_id"`
	EnabledActions []CommonModelScopesDisabledModelsEnabledActionsEnum `json:"enabled_actions"`
	IsDisabled bool `json:"is_disabled"`
	DisabledFields []string `json:"disabled_fields"`
	// raw json response by property name
	ResponseRaw map[string]json.RawMessage `json:"-"`
}

// NewCommonModelScopesDisabledModels instantiates a new CommonModelScopesDisabledModels object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonModelScopesDisabledModels(modelName string, modelId string, enabledActions []CommonModelScopesDisabledModelsEnabledActionsEnum, isDisabled bool, disabledFields []string) *CommonModelScopesDisabledModels {
	this := CommonModelScopesDisabledModels{}
	this.ModelName = modelName
	this.ModelId = modelId
	this.EnabledActions = enabledActions
	this.IsDisabled = isDisabled
	this.DisabledFields = disabledFields
	return &this
}

// NewCommonModelScopesDisabledModelsWithDefaults instantiates a new CommonModelScopesDisabledModels object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonModelScopesDisabledModelsWithDefaults() *CommonModelScopesDisabledModels {
	this := CommonModelScopesDisabledModels{}
	return &this
}

// GetModelName returns the ModelName field value
func (o *CommonModelScopesDisabledModels) GetModelName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModelName
}

// GetModelNameOk returns a tuple with the ModelName field value
// and a boolean to check if the value has been set.
func (o *CommonModelScopesDisabledModels) GetModelNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ModelName, true
}

// SetModelName sets field value
func (o *CommonModelScopesDisabledModels) SetModelName(v string) {
	o.ModelName = v
}

// GetModelId returns the ModelId field value
func (o *CommonModelScopesDisabledModels) GetModelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModelId
}

// GetModelIdOk returns a tuple with the ModelId field value
// and a boolean to check if the value has been set.
func (o *CommonModelScopesDisabledModels) GetModelIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ModelId, true
}

// SetModelId sets field value
func (o *CommonModelScopesDisabledModels) SetModelId(v string) {
	o.ModelId = v
}

// GetEnabledActions returns the EnabledActions field value
func (o *CommonModelScopesDisabledModels) GetEnabledActions() []CommonModelScopesDisabledModelsEnabledActionsEnum {
	if o == nil {
		var ret []CommonModelScopesDisabledModelsEnabledActionsEnum
		return ret
	}

	return o.EnabledActions
}

// GetEnabledActionsOk returns a tuple with the EnabledActions field value
// and a boolean to check if the value has been set.
func (o *CommonModelScopesDisabledModels) GetEnabledActionsOk() (*[]CommonModelScopesDisabledModelsEnabledActionsEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EnabledActions, true
}

// SetEnabledActions sets field value
func (o *CommonModelScopesDisabledModels) SetEnabledActions(v []CommonModelScopesDisabledModelsEnabledActionsEnum) {
	o.EnabledActions = v
}

// GetIsDisabled returns the IsDisabled field value
func (o *CommonModelScopesDisabledModels) GetIsDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDisabled
}

// GetIsDisabledOk returns a tuple with the IsDisabled field value
// and a boolean to check if the value has been set.
func (o *CommonModelScopesDisabledModels) GetIsDisabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsDisabled, true
}

// SetIsDisabled sets field value
func (o *CommonModelScopesDisabledModels) SetIsDisabled(v bool) {
	o.IsDisabled = v
}

// GetDisabledFields returns the DisabledFields field value
func (o *CommonModelScopesDisabledModels) GetDisabledFields() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DisabledFields
}

// GetDisabledFieldsOk returns a tuple with the DisabledFields field value
// and a boolean to check if the value has been set.
func (o *CommonModelScopesDisabledModels) GetDisabledFieldsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DisabledFields, true
}

// SetDisabledFields sets field value
func (o *CommonModelScopesDisabledModels) SetDisabledFields(v []string) {
	o.DisabledFields = v
}

func (o CommonModelScopesDisabledModels) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["model_name"] = o.ModelName
	}
	if true {
		toSerialize["model_id"] = o.ModelId
	}
	if true {
		toSerialize["enabled_actions"] = o.EnabledActions
	}
	if true {
		toSerialize["is_disabled"] = o.IsDisabled
	}
	if true {
		toSerialize["disabled_fields"] = o.DisabledFields
	}
	return json.Marshal(toSerialize)
}

func (v *CommonModelScopesDisabledModels) UnmarshalJSON(src []byte) error {
    type CommonModelScopesDisabledModelsUnmarshalTarget CommonModelScopesDisabledModels

	var intermediateResult CommonModelScopesDisabledModelsUnmarshalTarget
	var err1 = json.Unmarshal(src, &intermediateResult)
    if err1 != nil {
        return err1
    }
    var err2 = json.Unmarshal(src, &intermediateResult.ResponseRaw)
	if err2 != nil {
		return err2
	}

	*v = CommonModelScopesDisabledModels(intermediateResult)
	return nil
}
type NullableCommonModelScopesDisabledModels struct {
	value *CommonModelScopesDisabledModels
	isSet bool
}

func (v NullableCommonModelScopesDisabledModels) Get() *CommonModelScopesDisabledModels {
	return v.value
}

func (v *NullableCommonModelScopesDisabledModels) Set(val *CommonModelScopesDisabledModels) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonModelScopesDisabledModels) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonModelScopesDisabledModels) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonModelScopesDisabledModels(val *CommonModelScopesDisabledModels) *NullableCommonModelScopesDisabledModels {
	return &NullableCommonModelScopesDisabledModels{value: val, isSet: true}
}

func (v NullableCommonModelScopesDisabledModels) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonModelScopesDisabledModels) UnmarshalJSON(src []byte) error {
	v.isSet = true
	var err1 = json.Unmarshal(src, &v.value)
    if err1 != nil {
        return err1
    }
    return json.Unmarshal(src, &v.value.ResponseRaw)
}


